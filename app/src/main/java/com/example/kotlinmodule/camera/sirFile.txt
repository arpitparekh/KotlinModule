package com.example.fe22new;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Base64;
import android.util.Log;
import android.widget.Toast;

import com.example.fe22new.databinding.ActivityNewUserBinding;

import java.io.ByteArrayOutputStream;
import java.io.IOException;


public class NewUserActivity extends AppCompatActivity {
    private static final int REQ_CAMERA_CODE = 1;
    private static final String TAG = "NewUserActivity";
    private static final int REQ_GALLERY_CODE = 2;
    private ActivityNewUserBinding binding;
    private Bitmap imageBitmap;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivityNewUserBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        binding.savebtn.setOnClickListener(v -> {
            String imageString=convertBitmapToString();
            if(imageString!=null) {
                Log.i(TAG, imageString);
                saveUser(imageString);
            }
        });

        binding.imageView.setOnClickListener(v->{
            showImageChooseOption();
        });
    }

    private String convertBitmapToString() {
        if(imageBitmap==null){
            Toast.makeText(this, "Select Image", Toast.LENGTH_SHORT).show();
            return null;
        }
        ByteArrayOutputStream baos=new ByteArrayOutputStream();
        imageBitmap.compress(Bitmap.CompressFormat.JPEG,100,baos);
        byte bytes[]=baos.toByteArray();
        String imageString= Base64.encodeToString(bytes,Base64.DEFAULT);
        return imageString;
    }

    private void showImageChooseOption() {
        AlertDialog.Builder builder=new AlertDialog.Builder(this);
        builder.setTitle("Select Image From");
        builder.setPositiveButton("Camera", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                Intent intent=new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                startActivityForResult(intent, REQ_CAMERA_CODE);
            }
        });
        builder.setNegativeButton("Gallery", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                Intent intent=new Intent(Intent.ACTION_GET_CONTENT);
                intent.setType("image/*");
                startActivityForResult(intent,REQ_GALLERY_CODE);
            }
        });
        builder.setNeutralButton("Cancel", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {

            }
        });
        AlertDialog dialog=builder.create();
        dialog.show();
    }

    private void saveUser(String imageString) {
      /*  RetrofitService service= RetrofitClient.getClient();
        Call<String> call = service.createUser(binding.nameet.getText().toString(),
                binding.lnameet.getText().toString(),
                binding.emailet.getText().toString(),
                imageString);

        call.enqueue(new Callback<String>() {
            @Override
            public void onResponse(Call<String> call, Response<String> response) {

                startActivity(new Intent(getApplicationContext(),UserListActivity.class));

            }

            @Override
            public void onFailure(Call<String> call, Throwable t) {
                Toast.makeText(NewUserActivity.this, "Error", Toast.LENGTH_SHORT).show();
            }
        });*/
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode,
                                    @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(resultCode==RESULT_OK && requestCode==REQ_CAMERA_CODE){
            Bundle extras = data.getExtras();
            imageBitmap = (Bitmap) extras.get("data");
            binding.imageView.setImageBitmap(imageBitmap);
        }
        else if(resultCode==RESULT_OK && requestCode==REQ_GALLERY_CODE){
            Uri imageUri=data.getData();
            Log.i(TAG, imageUri.toString());
            try {
                imageBitmap = MediaStore.Images.Media.getBitmap(getContentResolver(),imageUri);
                binding.imageView.setImageBitmap(imageBitmap);
            } catch (IOException e) {
                e.printStackTrace();
            }
            //binding.imageView.setImageBitmap(imageBitmap);
        }
    }
}